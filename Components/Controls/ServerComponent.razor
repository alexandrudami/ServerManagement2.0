
<!--ServerComponent is a nonroutable Razor component that cannot be accesed through a URL and is instead overlayed on an existing routable component or another nonroutable component-->
@inject NavigationManager navigationManager

@if (server != null)
{

    <li>

        @server.Name in @server.City is
        <span style="color:@(server.IsOnline ? "green":"red")">
            <!-- changes the style of the span based on the status of the server -->
            @(server.IsOnline ? "online" : "offline")                       <!-- changes the text of the span based on the status of the server -->
        </span>
        &nbsp;
        <a href="/servers/@server.ServerID" class=" btn btn-link">Edit</a>  <!-- anchor component that links to the edit page routable component; uses the bootstrap format for a link btn-->
        &nbsp;
        <EditForm Model="server"
                  FormName="@($"form-server-{server.ServerID}")"
                  OnValidSubmit="@(() => {DeleteServer(server.ServerID); })">
            <button type="submit" class="btn btn-primary">Delete</button>
        </EditForm>
    </li>
}


@code {
    [Parameter]
    public Server? server { get; set; } = new Server { Name = "Server1", City = "Toronto" };

 

    private void DeleteServer(int serverID)
    {
        if (serverID > 0)
        {
            ServersRepository.DeleteServer(serverID);
            navigationManager.NavigateTo("/servers", true);
        }


    }

}
